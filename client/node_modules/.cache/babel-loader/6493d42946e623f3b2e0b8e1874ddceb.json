{"ast":null,"code":"import _classCallCheck from \"/Users/yoly/public-yoly/currency-converter/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/yoly/public-yoly/currency-converter/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/yoly/public-yoly/currency-converter/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/yoly/public-yoly/currency-converter/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/yoly/public-yoly/currency-converter/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/yoly/public-yoly/currency-converter/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/yoly/public-yoly/currency-converter/client/src/components/CurrencySelect.js\";\nimport React, { Component } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faTimes, faCheck, faAngleUp, faAngleDown } from '@fortawesome/free-solid-svg-icons';\nimport '../styles/globalSelect.css';\n\nvar CurrencySelect =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(CurrencySelect, _Component);\n\n  function CurrencySelect(props) {\n    var _this;\n\n    _classCallCheck(this, CurrencySelect);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(CurrencySelect).call(this, props));\n\n    _this.inputChangeHandler = function (event) {\n      var val = event.target.value;\n\n      _this.setState({\n        amount: val\n      });\n\n      if (_this.state.headerTitle !== \"...\") {\n        _this.props.onConversionTrigger(val, _this.state.headerTitle);\n      }\n    };\n\n    _this.resetAmount = function () {\n      _this.setState({\n        amount: \"\"\n      });\n\n      _this.props.onClearInput();\n    };\n\n    _this.state = {\n      listOpen: false,\n      headerTitle: _this.props.title,\n      amount: \"\"\n    };\n    _this.close = _this.close.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(CurrencySelect, [{\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate() {\n      var _this2 = this;\n\n      var listOpen = this.state.listOpen;\n      setTimeout(function () {\n        if (listOpen) {\n          window.addEventListener('click', _this2.close);\n        } else {\n          window.removeEventListener('click', _this2.close);\n        }\n      }, 0);\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      window.removeEventListener('click', this.close);\n    }\n  }, {\n    key: \"close\",\n    value: function close(timeOut) {\n      this.setState({\n        listOpen: false\n      });\n    }\n  }, {\n    key: \"selectItem\",\n    value: function selectItem(title, id, stateKey) {\n      //console.log('selected ', title, id, stateKey)\n      this.setState({\n        headerTitle: title,\n        listOpen: false\n      }, this.props.resetThenSet(id, stateKey));\n      this.props.onConversionTrigger(this.state.amount, title);\n    }\n  }, {\n    key: \"toggleList\",\n    value: function toggleList() {\n      this.setState(function (prevState) {\n        return {\n          listOpen: !prevState.listOpen\n        };\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      var list = this.props.list;\n      var _this$state = this.state,\n          listOpen = _this$state.listOpen,\n          headerTitle = _this$state.headerTitle;\n      return React.createElement(\"div\", {\n        className: \"select-control\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: \"dd-amount-box\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: \"input-amount-box\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        className: \"dd-amount\",\n        onChange: this.inputChangeHandler,\n        type: \"text\",\n        value: this.state.amount,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      })), React.createElement(\"span\", {\n        className: \"clear-x\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      }, React.createElement(FontAwesomeIcon, {\n        icon: faTimes,\n        className: \"show-clear-x\",\n        onClick: this.resetAmount,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      }))), React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      }, \"\\xA0\"), React.createElement(\"span\", {\n        className: \"dd-wrapper\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"dd-header\",\n        onClick: function onClick() {\n          return _this3.toggleList();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"dd-header-title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97\n        },\n        __self: this\n      }, headerTitle), listOpen ? React.createElement(FontAwesomeIcon, {\n        icon: faAngleUp,\n        size: \"2x\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99\n        },\n        __self: this\n      }) : React.createElement(FontAwesomeIcon, {\n        icon: faAngleDown,\n        size: \"2x\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100\n        },\n        __self: this\n      })), listOpen && React.createElement(\"ul\", {\n        className: \"dd-list\",\n        onClick: function onClick(e) {\n          return e.stopPropagation();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103\n        },\n        __self: this\n      }, list.map(function (item) {\n        return React.createElement(\"li\", {\n          className: \"dd-list-item\",\n          key: item.id,\n          onClick: function onClick() {\n            return _this3.selectItem(item.title, item.id, item.key);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 105\n          },\n          __self: this\n        }, item.title, \" \", item.selected && React.createElement(FontAwesomeIcon, {\n          icon: faCheck,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 105\n          },\n          __self: this\n        }));\n      }))));\n    }\n  }]);\n\n  return CurrencySelect;\n}(Component);\n\nexport default CurrencySelect;","map":{"version":3,"sources":["/Users/yoly/public-yoly/currency-converter/client/src/components/CurrencySelect.js"],"names":["React","Component","FontAwesomeIcon","faTimes","faCheck","faAngleUp","faAngleDown","CurrencySelect","props","inputChangeHandler","event","val","target","value","setState","amount","state","headerTitle","onConversionTrigger","resetAmount","onClearInput","listOpen","title","close","bind","setTimeout","window","addEventListener","removeEventListener","timeOut","id","stateKey","resetThenSet","prevState","list","toggleList","e","stopPropagation","map","item","selectItem","key","selected"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faTimes, faCheck, faAngleUp, faAngleDown } from '@fortawesome/free-solid-svg-icons'\n\nimport '../styles/globalSelect.css'\n\nclass CurrencySelect extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            listOpen: false,\n            headerTitle: this.props.title,\n            amount: \"\"\n        }\n        this.close = this.close.bind(this)\n    }\n\n    componentDidUpdate() {\n        const { listOpen } = this.state\n        setTimeout(() => {\n            if (listOpen) {\n                window.addEventListener('click', this.close)\n            }\n            else {\n                window.removeEventListener('click', this.close)\n            }\n        }, 0)\n    }\n\n    componentWillUnmount() {\n        window.removeEventListener('click', this.close)\n    }\n\n    close(timeOut) {\n        this.setState({\n            listOpen: false\n        })\n    }\n\n    selectItem(title, id, stateKey) {\n        //console.log('selected ', title, id, stateKey)\n        this.setState({\n            headerTitle: title,\n            listOpen: false\n        }, this.props.resetThenSet(id, stateKey))\n\n        this.props.onConversionTrigger(this.state.amount, title)\n    }\n\n    toggleList() {\n        this.setState(prevState => ({\n            listOpen: !prevState.listOpen\n        }))\n    }\n\n    inputChangeHandler = (event) => {\n        const val = event.target.value\n        this.setState({ amount: val })\n\n        if (this.state.headerTitle !== \"...\") {\n            this.props.onConversionTrigger(val, this.state.headerTitle)\n        }\n    }\n\n    resetAmount = () => {\n        this.setState({ amount: \"\" })\n        this.props.onClearInput()\n    }\n\n    render() {\n        const { list } = this.props\n        const { listOpen, headerTitle } = this.state\n        return (\n            <div className=\"select-control\">\n                <span className=\"dd-amount-box\">\n                    <span className=\"input-amount-box\">\n                        <input\n                            className=\"dd-amount\"\n                            onChange={this.inputChangeHandler}\n                            type=\"text\"\n                            value={this.state.amount}\n                        ></input>\n                    </span>\n\n                    <span className=\"clear-x\">\n                        <FontAwesomeIcon icon={faTimes}\n                            className=\"show-clear-x\"\n                            onClick={this.resetAmount} />\n                    </span>\n\n                </span>\n\n                <span>&nbsp;</span>\n\n                <span className=\"dd-wrapper\">\n                    <div className=\"dd-header\" onClick={() => this.toggleList()}>\n                        <div className=\"dd-header-title\">{headerTitle}</div>\n                        {listOpen\n                            ? <FontAwesomeIcon icon={faAngleUp} size=\"2x\" />\n                            : <FontAwesomeIcon icon={faAngleDown} size=\"2x\" />\n                        }\n                    </div>\n                    {listOpen && <ul className=\"dd-list\" onClick={e => e.stopPropagation()}>\n                        {list.map((item) => (\n                            <li className=\"dd-list-item\" key={item.id} onClick={() => this.selectItem(item.title, item.id, item.key)}>{item.title} {item.selected && <FontAwesomeIcon icon={faCheck} />}</li>\n                        ))}\n                    </ul>}\n                </span>\n            </div>\n\n        )\n    }\n}\n\nexport default CurrencySelect\n"]},"metadata":{},"sourceType":"module"}