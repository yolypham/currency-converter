{"ast":null,"code":"import _regeneratorRuntime from \"/Users/yoly/public-yoly/currency-converter/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/yoly/public-yoly/currency-converter/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _defineProperty from \"/Users/yoly/public-yoly/currency-converter/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"/Users/yoly/public-yoly/currency-converter/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/yoly/public-yoly/currency-converter/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/yoly/public-yoly/currency-converter/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/yoly/public-yoly/currency-converter/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/yoly/public-yoly/currency-converter/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/yoly/public-yoly/currency-converter/client/src/App.js\";\nimport React, { Component } from 'react';\nimport Header from './components/Header';\nimport CurrencySelect from './components/CurrencySelect';\nimport { postConversion } from './services/currencyService';\nimport './App.css';\nvar USD_CURRENCY = \"USD\";\nvar currencyFormats = [{\n  type: \"USD\",\n  formatter: new Intl.NumberFormat('en-US', {\n    style: 'currency',\n    currency: 'USD'\n  })\n}, {\n  type: \"CAD\",\n  formatter: new Intl.NumberFormat('en-CA', {\n    style: 'currency',\n    currency: 'CAD'\n  })\n}, {\n  type: \"GBP\",\n  formatter: new Intl.NumberFormat('en-GB', {\n    style: 'currency',\n    currency: 'GBP'\n  })\n}, {\n  type: \"EUR\",\n  formatter: new Intl.NumberFormat('it-TI', {\n    style: 'currency',\n    currency: 'EUR'\n  })\n}];\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App() {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(App).call(this));\n\n    _this.resetThenSet = function (id, key) {\n      var temp = JSON.parse(JSON.stringify(_this.state[key]));\n      temp.forEach(function (item) {\n        return item.selected = false;\n      });\n      temp[id].selected = true;\n\n      _this.setState(_defineProperty({}, key, temp));\n    };\n\n    _this.clearInputHandler =\n    /*#__PURE__*/\n    _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee() {\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _this.setState({\n                fromCurrency: \"\"\n              });\n\n            case 1:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, this);\n    }));\n\n    _this.convertHandler =\n    /*#__PURE__*/\n    function () {\n      var _ref2 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee2(value, currencyType) {\n        var conversionResult;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.prev = 0;\n                _context2.next = 3;\n                return postConversion({\n                  amount: value,\n                  currency: currencyType\n                });\n\n              case 3:\n                conversionResult = _context2.sent;\n\n                if (!(conversionResult === null)) {\n                  _context2.next = 8;\n                  break;\n                }\n\n                console.log('Check API server');\n                alert('API server is down, please contact support');\n                return _context2.abrupt(\"return\");\n\n              case 8:\n                _context2.next = 10;\n                return _this.setState({\n                  fromValue: value,\n                  fromCurrency: currencyType,\n                  toValue: conversionResult.amount\n                });\n\n              case 10:\n                _context2.next = 16;\n                break;\n\n              case 12:\n                _context2.prev = 12;\n                _context2.t0 = _context2[\"catch\"](0);\n                console.log('Check API server');\n                alert('API server is down, please contact support');\n\n              case 16:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this, [[0, 12]]);\n      }));\n\n      return function (_x, _x2) {\n        return _ref2.apply(this, arguments);\n      };\n    }();\n\n    _this.state = {\n      currency: [{\n        id: 0,\n        title: 'CAD',\n        selected: false,\n        key: 'currency'\n      }, {\n        id: 1,\n        title: 'GBP',\n        selected: false,\n        key: 'currency'\n      }, {\n        id: 2,\n        title: 'EUR',\n        selected: false,\n        key: 'currency'\n      }],\n      fromCurrency: '',\n      fromValue: 0,\n      toValue: 0\n    };\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var conversionDiv = \"\";\n\n      if (this.state.fromCurrency !== \"\") {\n        var fromCurrencyObj = currencyFormats.find(function (o) {\n          return o.type === _this2.state.fromCurrency;\n        });\n        var toCurrencyObj = currencyFormats.find(function (o) {\n          return o.type === USD_CURRENCY;\n        });\n        var fromValFormatted = fromCurrencyObj.formatter.format(this.state.fromValue);\n        var toValFormatted = toCurrencyObj.formatter.format(this.state.toValue);\n        conversionDiv = this.state.toValue ? React.createElement(\"div\", {\n          className: \"result-div\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 126\n          },\n          __self: this\n        }, React.createElement(\"h2\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 127\n          },\n          __self: this\n        }, fromValFormatted, \"  \", this.state.fromCurrency, \" = \", toValFormatted, \" \", toCurrencyObj.type)) : \"\";\n      }\n\n      return React.createElement(\"div\", {\n        className: \"App\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134\n        },\n        __self: this\n      }, React.createElement(Header, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136\n        },\n        __self: this\n      }), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 137\n        },\n        __self: this\n      }, \"Enter amount and select currency to convert to US $ equivalent amount:\"), React.createElement(\"div\", {\n        className: \"select-div\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 138\n        },\n        __self: this\n      }, React.createElement(CurrencySelect, {\n        title: \"...\",\n        list: this.state.currency,\n        resetThenSet: this.resetThenSet,\n        onConversionTrigger: this.convertHandler,\n        onClearInput: this.clearInputHandler,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 139\n        },\n        __self: this\n      })), conversionDiv);\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App;","map":{"version":3,"sources":["/Users/yoly/public-yoly/currency-converter/client/src/App.js"],"names":["React","Component","Header","CurrencySelect","postConversion","USD_CURRENCY","currencyFormats","type","formatter","Intl","NumberFormat","style","currency","App","resetThenSet","id","key","temp","JSON","parse","stringify","state","forEach","item","selected","setState","clearInputHandler","fromCurrency","convertHandler","value","currencyType","amount","conversionResult","console","log","alert","fromValue","toValue","title","conversionDiv","fromCurrencyObj","find","o","toCurrencyObj","fromValFormatted","format","toValFormatted"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport Header from './components/Header'\nimport CurrencySelect from './components/CurrencySelect'\nimport { postConversion } from './services/currencyService'\nimport './App.css';\n\nconst USD_CURRENCY = \"USD\"\n\nconst currencyFormats = [\n  {\n    type: \"USD\",\n    formatter:\n      new Intl.NumberFormat('en-US', {\n        style: 'currency',\n        currency: 'USD'\n      })\n  },\n  {\n    type: \"CAD\",\n    formatter:\n      new Intl.NumberFormat('en-CA', {\n        style: 'currency',\n        currency: 'CAD'\n      })\n  },\n  {\n    type: \"GBP\",\n    formatter:\n      new Intl.NumberFormat('en-GB', {\n        style: 'currency',\n        currency: 'GBP'\n      })\n  },\n  {\n    type: \"EUR\",\n    formatter:\n      new Intl.NumberFormat('it-TI', {\n        style: 'currency',\n        currency: 'EUR'\n      })\n  }\n]\n\nclass App extends Component {\n  constructor() {\n    super()\n    this.state = {\n      currency: [\n        {\n          id: 0,\n          title: 'CAD',\n          selected: false,\n          key: 'currency'\n        },\n        {\n          id: 1,\n          title: 'GBP',\n          selected: false,\n          key: 'currency'\n        },\n        {\n          id: 2,\n          title: 'EUR',\n          selected: false,\n          key: 'currency'\n        }\n      ],\n      fromCurrency: '',\n      fromValue: 0,\n      toValue: 0\n    }\n  }\n\n  resetThenSet = (id, key) => {\n    let temp = JSON.parse(JSON.stringify(this.state[key]))\n    temp.forEach(item => item.selected = false);\n    temp[id].selected = true;\n    this.setState({\n      [key]: temp\n    })\n  }\n\n  clearInputHandler = async () => {\n    this.setState({ fromCurrency: \"\" })\n  }\n\n  convertHandler = async (value, currencyType) => {\n    try {\n      //POST\n      const conversionResult = await postConversion(\n        {\n          amount: value,\n          currency: currencyType\n        })\n\n      if (conversionResult === null) {\n        console.log('Check API server')\n        alert('API server is down, please contact support')\n        return\n      }\n\n      await this.setState({\n        fromValue: value,\n        fromCurrency: currencyType,\n        toValue: conversionResult.amount\n      })\n    } catch (error) {\n      console.log('Check API server')\n      alert('API server is down, please contact support')\n    }\n\n  }\n\n  render() {\n    let conversionDiv = \"\"\n\n    if (this.state.fromCurrency !== \"\") {\n      const fromCurrencyObj = currencyFormats.find(o => o.type === this.state.fromCurrency)\n\n      const toCurrencyObj = currencyFormats.find(o => o.type === USD_CURRENCY)\n\n      const fromValFormatted = (fromCurrencyObj.formatter.format(this.state.fromValue));\n      const toValFormatted = (toCurrencyObj.formatter.format(this.state.toValue));\n\n      conversionDiv = this.state.toValue ? (\n        <div className=\"result-div\">\n          <h2>{fromValFormatted}  {this.state.fromCurrency} = {toValFormatted} {toCurrencyObj.type}</h2>\n        </div>\n      ) : \"\"\n    }\n\n\n    return (\n      <div className=\"App\">\n\n        <Header />\n        <p>Enter amount and select currency to convert to US $ equivalent amount:</p>\n        <div className=\"select-div\">\n          <CurrencySelect\n            title=\"...\"\n            list={this.state.currency}\n            resetThenSet={this.resetThenSet}\n            onConversionTrigger={this.convertHandler}\n            onClearInput={this.clearInputHandler}\n          />\n        </div>\n\n        {conversionDiv}\n\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}